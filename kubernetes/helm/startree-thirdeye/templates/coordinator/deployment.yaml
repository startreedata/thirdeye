
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thirdeye.coordinator.fullname" . }}
  labels:
    app: {{ include "thirdeye.name" . }}
    chart: {{ include "thirdeye.chart" . }}
    component: {{ .Values.coordinator.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "thirdeye.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.coordinator.name }}
  replicas: {{ .Values.coordinator.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "thirdeye.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.coordinator.name }}
      annotations:
        prometheus.io/port: "8081"
        prometheus.io/scrape: {{ .Values.prometheus.enabled | quote }}
        {{- toYaml .Values.coordinator.podAnnotations | nindent 8 }}
    spec:
      {{- if .Values.image.pullSecretsName }}
      imagePullSecrets:
        - name: "{{ .Values.image.pullSecretsName }}"
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.coordinator.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.coordinator.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.coordinator.tolerations | nindent 8 }}
      {{- if .Values.tls.enabled }}
      initContainers:
      - name: init-keystore
        image: eclipse-temurin:17-jdk
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        command:
        - /bin/sh
        - -c
        - >
          echo "importing internal tls key" &&
          openssl pkcs12 -export -name internalTls -in /opt/thirdeye/server/tls-internal/tls.crt -inkey /opt/thirdeye/server/tls-internal/tls.key -out /opt/thirdeye/server/keystore-internal.p12 -password pass:changeit &&
          keytool -noprompt  -importkeystore -alias internalTls -srckeystore /opt/thirdeye/server/keystore-internal.p12 -srcstoretype PKCS12 -srcstorepass changeit -deststorepass changeit -destkeystore /opt/thirdeye/server/keystore/keystore &&
          echo "importing ca cert" &&
          keytool -noprompt  -import -alias startreePlatformCa -srcstorepass changeit -deststorepass changeit -keystore /opt/java/openjdk/lib/security/cacerts -file /opt/thirdeye/server/tls-internal/ca.crt &&
          cp /opt/java/openjdk/lib/security/cacerts /opt/thirdeye/server/keystore/truststore
        volumeMounts:
        - name: tls-internal
          mountPath: /opt/thirdeye/server/tls-internal
          readOnly: true
        - name: keystore
          mountPath: /opt/thirdeye/server/keystore
      {{- end }}
      containers:
      - name: coordinator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: 
        - "server"
        env:
          - name: SMTP_HOST
            value: {{ .Values.smtp.host | quote }}
          - name: SMTP_PORT
            value: {{ .Values.smtp.port  | quote }}
          - name: SMTP_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.smtp.secretKeyRef.name }}
                key: username
          - name: SMTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.smtp.secretKeyRef.name }}
                key: password
          {{- if .Values.tls.enabled }}
          - name: JAVA_OPTS
            value: >
              -Djavax.net.ssl.keyStore=/opt/thirdeye/server/keystore/keystore
              -Djavax.net.ssl.keyStorePassword=changeit
              -Djavax.net.ssl.trustStore=/opt/thirdeye/server/keystore/truststore
              -Djavax.net.ssl.trustStorePassword=changeit
          {{- end }}
        ports:
          - containerPort: {{ .Values.coordinator.port }}
            protocol: TCP
        volumeMounts:
          - name: thirdeye-config
            mountPath: "/home/thirdeye/thirdeye/config/server.yaml"
            subPath: "server.yaml"
            readOnly: true
          {{- if .Values.tls.enabled }}
          - name: keystore
            mountPath: /opt/thirdeye/server/keystore
            readOnly: true
          {{- end }}
          {{- if .Values.config.holidayLoaderKey }}
          - name: thirdeye-config
            mountPath: "/home/thirdeye/thirdeye/config/holiday-loader-key.json"
            subPath: "holiday-loader-key.json"
            readOnly: true
        {{- end }}
        resources:
          {{- toYaml .Values.coordinator.resources | nindent 12 }}
      restartPolicy: Always
      volumes:
        - name: thirdeye-config
          configMap:
            name: thirdeye-config
        {{- if .Values.tls.enabled }}
        - name: tls-internal
          secret:
            secretName: {{ include "thirdeye.coordinator.fullname" . }}-internal-tls
        - name: keystore
          emptyDir: {}
        {{- end }}
