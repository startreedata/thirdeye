#
# Copyright 2022 StarTree Inc
#
# Licensed under the StarTree Community License (the "License"); you may not use
# this file except in compliance with the License. You may obtain a copy of the
# License at http://www.startree.ai/legal/startree-community-license
#
# Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT * WARRANTIES OF ANY KIND,
# either express or implied.
# See the License for the specific language governing permissions and limitations under
# the License.
#


{{- if .Values.dataloader.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: dataloader-pinot
spec:
  template:
    metadata:
      name: dataloader-pinot
    spec:
      initContainers:
      - name: wait-for-pinot
        image: alpine/curl:latest
        env:
          - name: CONTROLLER_PROTOCOL
            value: {{ (.Values.dataloader.pinot).controllerProtocol | default "http" | quote }}
          - name: CONTROLLER_HOST
            value: {{ (.Values.dataloader.pinot).controllerHost | default "pinot-pinot-controller-headless" | quote }}
          - name: CONTROLLER_PORT
            value: {{ (.Values.dataloader.pinot).controllerPort | default "9000" | quote }}
        command:
        - /bin/sh
        - -c
        - >
          timeout=60 &&
          retry=0 &&
          until curl -f $CONTROLLER_PROTOCOL://$CONTROLLER_HOST:$CONTROLLER_PORT/health;
          do 
            if [ $retry -eq $timeout ];then
              echo "Pinot controller probe timed out" &&
              echo "Possible causes : " &&
              echo "1. Pinot controller is not reachable from the cluster" &&
              echo "2. Check if right protocol (http/https) is configured" &&
              echo "3. Check if right port is configured. Use 80 (http) or 443 (https) for public dns url" &&
              echo "4. If auth is enabled on Pinot set the dataloader.pinot.commandOptions: \"-authToken 'Basic <valid token>'\"" &&
              echo "" &&
              echo "Once the issue is identified :" &&
              echo "- disable the dataloader with 'dataloader.enabled: false'." &&
              echo "- re-enable the dataloader with 'dataloader.enabled: true' along with the revised configs."
              return 1
            fi
            echo "waiting for pinot" &&
            sleep 5 &&
            retry=$((retry+1))
          done
      containers:
      - name: load-datasets
        image: apachepinot/pinot:latest-jdk11
        command: ["/dataloader/resources/dataloader.sh"]
        volumeMounts:
        - name: dataloader-resources
          mountPath: /dataloader/resources/
        env:
          - name: JAVA_OPTS
            value: "-Xms256M -Xmx1G -XX:+UseG1GC -Dlog4j2.configurationFile=conf/log4j2.xml -Dpinot.admin.system.exit=true"
          - name: CONTROLLER_PROTOCOL
            value: {{ (.Values.dataloader.pinot).controllerProtocol | default "http" | quote }}
          - name: CONTROLLER_HOST
            value: {{ (.Values.dataloader.pinot).controllerHost | default "pinot-pinot-controller-headless" | quote }}
          - name: CONTROLLER_PORT
            value: {{ (.Values.dataloader.pinot).controllerPort | default "9000" | quote }}
      volumes:
        - name: dataloader-resources
          configMap:
            name: pinot-scripts
            defaultMode: 0777
      restartPolicy: Never
{{- end }}
