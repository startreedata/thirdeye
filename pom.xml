<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2023 StarTree Inc

    Licensed under the StarTree Community License (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.startree.ai/legal/startree-community-license

    Unless required by applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT * WARRANTIES OF ANY KIND,
    either express or implied.
    See the License for the specific language governing permissions and limitations under
    the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ai.startree.thirdeye</groupId>
  <artifactId>thirdeye</artifactId>
  <version>1.207.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>thirdeye</name>

  <modules>
    <module>thirdeye-dataframe</module>
    <module>thirdeye-spi</module>
    <module>thirdeye-persistence</module>
    <module>thirdeye-core</module>
    <module>thirdeye-detectionpipeline</module>
    <module>thirdeye-notification</module>
    <module>thirdeye-worker</module>
    <module>thirdeye-scheduler</module>
    <module>thirdeye-server</module>

    <!--  Build plugins -->
    <module>thirdeye-plugins</module>

    <!--  Build the distribution -->
    <module>thirdeye-distribution</module>

    <!--  Run the Integration test modules after building the distribution (required for plugins) -->
    <module>pinot-test-container</module>
    <module>thirdeye-integration-tests</module>
  </modules>

  <properties>
    <jdk.version>11</jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--  Dependency Versions -->
    <!--  Please maintain a sorted list -->
    <!--  Intellij: Search actions (Press shift twice), type "sort lines", then enter :-) -->
    <aspectj.version>1.9.6</aspectj.version>
    <assertj.version>3.17.2</assertj.version>
    <auto-service.version>1.0.1</auto-service.version>
    <avro.version>1.7.7</avro.version>
    <calcite.version>1.36.0</calcite.version>
    <calendar-api.version>v3-rev300-1.23.0</calendar-api.version>
    <checkerframework.version>3.39.0</checkerframework.version>
    <commons-cli.version>1.3</commons-cli.version>
    <commons-collection4.version>4.1</commons-collection4.version>
    <commons-csv.version>1.3</commons-csv.version>
    <commons-lang3.version>3.9</commons-lang3.version>
    <commons-math3.version>3.6.1</commons-math3.version>
    <commons.email.version>1.5</commons.email.version>
    <dropwizard.redirect.bundle.version>1.3.5</dropwizard.redirect.bundle.version>
    <dropwizard.version>2.1.6</dropwizard.version>
    <flyway.version>8.5.13</flyway.version>
    <freemarker.version>2.3.28</freemarker.version>
    <guava.version>21.0</guava.version>
    <guice.version>5.1.0</guice.version>
    <hsqldb.version>2.7.1</hsqldb.version>
    <jackson.version>2.13.5</jackson.version>
    <jetty.version>9.4.48.v20220622</jetty.version>
    <jodatime.version>2.7</jodatime.version>
    <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    <mockito.version>4.3.1</mockito.version>
    <modelmapper.version>3.1.1</modelmapper.version>
    <mysql.connector.version>8.0.33</mysql.connector.version>
    <org.mapstruct.version>1.5.4.Final</org.mapstruct.version>
    <pinot.version>0.10.0</pinot.version>
    <prometheus.version>0.11.0</prometheus.version>
    <quartz.version>2.3.2</quartz.version>
    <reflections.version>0.10.2</reflections.version>
    <retrofit2.version>2.9.0</retrofit2.version>
    <sendgrid.version>4.0.1</sendgrid.version>
    <slack.version>1.29.2</slack.version>
    <slf4j-api.version>1.7.12</slf4j-api.version>
    <swagger.version>2.1.6-1</swagger.version>
    <testcontainers.version>1.18.3</testcontainers.version>
    <micrometer.version>1.11.4</micrometer.version>
  </properties>

  <licenses>
    <license>
      <name>StarTree ThirdEye Community License Agreement 1.0</name>
      <url>https://raw.githubusercontent.com/startreedata/thirdeye/master/LICENSE</url>
      <distribution>repo</distribution>
      <comments>A StarTree business-friendly license</comments>
    </license>
  </licenses>

  <organization>
    <name>StarTree Inc</name>
    <url>https://www.startree.ai/</url>
  </organization>

  <distributionManagement>
    <snapshotRepository>
      <id>startree-snapshots</id>
      <name>StarTree Artifactory Snapshots</name>
      <url>https://repo.startreedata.io/artifactory/startree-snapshots</url>
    </snapshotRepository>
    <repository>
      <id>startree-releases</id>
      <name>StarTree Artifactory Releases</name>
      <url>https://repo.startreedata.io/artifactory/startree-releases</url>
    </repository>
  </distributionManagement>

  <scm>
    <!-- This is used by maven-release-plugin -->
    <url>https://github.com/startreedata/thirdeye.git</url>
    <connection>scm:git:git@github.com:startreedata/thirdeye.git</connection>
    <developerConnection>scm:git:git@github.com:startreedata/thirdeye.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <inceptionYear>2014-2018</inceptionYear>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <showWarnings>true</showWarnings>
            <release>${jdk.version}</release>
            <annotationProcessorPaths>
              <path>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>${auto-service.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <arg>-XDcompilePolicy=simple</arg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.1</version>
          <inherited>true</inherited>
          <configuration>
            <configLocation>thirdeye-checkstyle.xml</configLocation>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <failOnViolation>true</failOnViolation>
            <violationSeverity>warning</violationSeverity>
            <linkXRef>false</linkXRef>
          </configuration>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <!-- download weaver jar - required for surefire goals-->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.3.0</version>
          <executions>
            <execution>
              <id>resolve</id>
              <phase>validate</phase>
              <goals>
                <goal>get</goal>
              </goals>
              <configuration>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
              </configuration>
            </execution>
            <!-- failing build on dependency analysis warnings -->
            <execution>
              <id>analyze</id>
              <goals>
                <goal>analyze-only</goal>
              </goals>
              <configuration>
                <!-- workaround for https://issues.apache.org/jira/browse/MDEP-791 -->
                <ignoredNonTestScopedDependencies>
                  <ignoredNonTestScopedDependency>*</ignoredNonTestScopedDependency>
                </ignoredNonTestScopedDependencies>
                <!--TODO(TE-1501): turn on failure once all existing dependency warnings are resolved. -->
                <failOnWarning>false</failOnWarning>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <!-- See https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/ -->
            <argLine>
              --illegal-access=permit
            </argLine>
            <argLine>
              -javaagent:"${settings.localRepository}"/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar
            </argLine>
            <threadCount>1</threadCount>
            <systemPropertyVariables>
              <!-- using a single configuration file for test logging
              warning: maven.multiModuleProjectDirectory may break if there is no ./mvn folder.
              as of today we know there is always one because we use the maven wrapper-->
              <logback.configurationFile>${maven.multiModuleProjectDirectory}/logback-test.xml</logback.configurationFile>
              <projectVersion>${project.version}</projectVersion>
              <projectBuildDirectory>${project.build.directory}</projectBuildDirectory>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.2.0</version>
          <executions>
            <execution>
              <id>parse-versions-for-release</id>
              <phase>initialize</phase>
              <goals>
                <goal>parse-version</goal>
              </goals>
              <configuration>
                <propertyPrefix>parsedVersion</propertyPrefix>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <!-- TODO CYRIL need to check if a wait time is necessary with Github Action-->
            <waitBeforeTagging>0</waitBeforeTagging>
            <developmentVersion>
              ${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.0-SNAPSHOT
            </developmentVersion>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.scm</groupId>
              <artifactId>maven-scm-provider-gitexe</artifactId>
              <version>1.11.2</version>
            </dependency>
            <dependency>
              <groupId>org.apache.maven.scm</groupId>
              <artifactId>maven-scm-api</artifactId>
              <version>1.11.2</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
                <goal>create-metadata</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <!-- build test jars to re-use test utils in StarTree distribution-->
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
              <configuration>
                <skipIfEmpty>true</skipIfEmpty>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <archive>
              <manifestEntries>
                <Build-Time>${maven.build.timestamp}</Build-Time>
                <!-- scmBranch is autopopulated by buildnumber-maven-plugin -->
                <Implementation-Branch>${scmBranch}</Implementation-Branch>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <!-- buildNumber is autopopulated by buildnumber-maven-plugin -->
                <Implementation-Version>${project.version}-${buildNumber}</Implementation-Version>
                <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <formats>
              <format>html</format>
              <format>xml</format>
            </formats>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.0</version>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <header>HEADER</header>
            <excludes>
              <!-- Text and log files -->
              <exclude>**/*.txt</exclude>
              <exclude>**/*.log</exclude>
              <exclude>**/*.list</exclude>
              <exclude>**/*.out</exclude>
              <exclude>**/*.generated</exclude>
              <exclude>**/*.json</exclude>
              <exclude>**/*.schema</exclude>

              <!-- Binary files -->
              <exclude>**/*.avro</exclude>
              <exclude>**/*.avsc</exclude>
              <exclude>**/*.csv</exclude>
              <exclude>**/*.desc</exclude>
              <exclude>**/*.parquet</exclude>
              <exclude>**/*.gz</exclude>
              <exclude>**/*.orc</exclude>
              <exclude>**/*.dict</exclude>
              <exclude>**/*.raw</exclude>
              <exclude>**/*.mapping</exclude>
              <exclude>**/*.ser</exclude>
              <exclude>**/*.v1</exclude>
              <exclude>**/*.v2</exclude>
              <exclude>**/helm/**/charts/**</exclude>

              <!-- Auto-generated files -->
              <exclude>target/**</exclude>
              <exclude>thirdeye-*/target/**</exclude>
              <exclude>**/mem.script</exclude>
              <exclude>**/mem.properties</exclude>
              <exclude>**/m2/**</exclude>

              <!-- Top level files -->
              <exclude>HEADER</exclude>
              <exclude>LICENSE*</exclude>
              <exclude>NOTICE*</exclude>

              <exclude>src/main/resources/db/migration/mysql/**</exclude>

              <!-- files from Eclipse -->
              <exclude>**/maven-eclipse.xml</exclude>
              <exclude>.externalToolBuilders/**</exclude>

              <!-- files from IntelliJ -->
              <exclude>.idea/**</exclude>

              <!-- tmp directories -->
              <exclude>**/tmp/**</exclude>

              <!-- ui directory -->
              <exclude>thirdeye-ui/**</exclude>
            </excludes>
            <mapping>
              <ts>JAVADOC_STYLE</ts>
              <tsx>JAVADOC_STYLE</tsx>
              <js>JAVADOC_STYLE</js>
            </mapping>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-dataframe</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-spi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-persistence</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-pinot</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-detection-components</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-detectors</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-detectionpipeline</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-notification</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-worker</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-scheduler</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-server</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-oauth</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-notification-email</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-contributors-simple</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-bootstrap-open-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-enumerators</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.startree.thirdeye.plugins</groupId>
        <artifactId>thirdeye-postprocessors</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- project dependencies -->
      <dependency>
        <groupId>org.apache.pinot</groupId>
        <artifactId>pinot-java-client</artifactId>
        <version>${pinot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.pinot</groupId>
        <artifactId>pinot-jdbc-client</artifactId>
        <version>${pinot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.pinot</groupId>
        <artifactId>pinot-spi</artifactId>
        <version>${pinot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.14</version>
      </dependency>
      <dependency>
        <groupId>com.sendgrid</groupId>
        <artifactId>sendgrid-java</artifactId>
        <version>${sendgrid.version}</version>
      </dependency>
      <dependency>
        <groupId>com.slack.api</groupId>
        <artifactId>slack-api-client</artifactId>
        <version>${slack.version}</version>
      </dependency>
      <dependency>
        <groupId>org.modelmapper</groupId>
        <artifactId>modelmapper</artifactId>
        <version>${modelmapper.version}</version>
      </dependency>

      <!-- This helps map pojos from one model to another. API <> DTO, etc -->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>

      <!--
      A configuration/metadata generator for java.util.ServiceLoader-style service providers
      see: https://github.com/google/auto/tree/master/service
      -->
      <dependency>
        <groupId>com.google.auto.service</groupId>
        <artifactId>auto-service-annotations</artifactId>
        <version>${auto-service.version}</version>
      </dependency>

      <!-- dropwizard -->
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-core</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <!-- TODO: remove this once completely moved to jpa -->
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-hibernate</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-db</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-migrations</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-auth</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard-bundles</groupId>
        <artifactId>dropwizard-redirect-bundle</artifactId>
        <version>${dropwizard.redirect.bundle.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-testing</artifactId>
        <version>${dropwizard.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-client</artifactId>
        <version>${dropwizard.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>mysql</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-proxy</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <!-- http://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
      </dependency>

      <!-- jackson -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-joda</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- utils -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${commons-math3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-email</artifactId>
        <version>${commons.email.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-csv</artifactId>
        <version>${commons-csv.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons-collection4.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${jodatime.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>retrofit</artifactId>
        <version>${retrofit2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>converter-jackson</artifactId>
        <version>${retrofit2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <version>9.7</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_dropwizard</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_servlet</artifactId>
        <version>${prometheus.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>1.10.0</version>
      </dependency>
      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.11.0</version>
      </dependency>
      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <!-- database -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.connector.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-persist</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-mysql</artifactId>
        <version>${flyway.version}</version>
      </dependency>

      <!-- macro dependencies -->
      <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-core</artifactId>
        <version>${calcite.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-babel</artifactId>
        <version>${calcite.version}</version>
      </dependency>

      <!-- test dependencies -->
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>thirdeye-persistence</artifactId>
        <version>${project.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>7.8.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>${hsqldb.version}</version>
      </dependency>
      <!-- legacy metrics library-->
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>4.2.19</version>
      </dependency>
      <!-- new metrics system - core is a facade, registry is the implementation -->
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-core</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${micrometer.version}</version>
      </dependency>

      <!-- checkers -->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>${checkerframework.version}</version>
      </dependency>

      <!-- swagger -->
      <dependency>
        <groupId>com.smoketurner</groupId>
        <artifactId>dropwizard-swagger</artifactId>
        <version>${swagger.version}</version>
        <exclusions>
          <!-- excluded the dropwizard 2.0.0 dependencies -->
          <exclusion>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-auth</artifactId>
          </exclusion>
          <exclusion>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-servlets</artifactId>
          </exclusion>
          <!-- javax.validation:validation-api conflicting with -->
          <!-- jakarta.validation:jakarta.validation-api which is a dropwizard dependency -->
          <exclusion>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Google Calendar API -->
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-calendar</artifactId>
        <version>${calendar-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>

      <!-- Test containers -->
      <dependency>
        <groupId>ai.startree.thirdeye</groupId>
        <artifactId>pinot-test-container</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <configuration>
                  <includePom>true</includePom>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <check />
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <configLocation>thirdeye/checkstyle.xml</configLocation>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <repositories>
    <repository>
      <id>atlassian-public</id>
      <url>https://packages.atlassian.com/maven/repository/public</url>
    </repository>
    <repository>
      <id>startree-releases</id>
      <url>https://repo.startreedata.io/artifactory/startree-releases</url>
    </repository>
  </repositories>
</project>
