[
  {
    "name": "sample-alert-v2",
    "description": "Sample description payload for testing",
    "cron": "0 0/1 * 1/1 * ? *",
    "template": {
      "nodes": [
        {
          "name": "root",
          "type": "AnomalyDetector",
          "params": {
            "component.detector.timestamp": "ts",
            "component.detector.metric": "met",
            "component.detector.dimensions": [],
            "component.detector.timezone": "US/Pacific",
            "component.detector.monitoringGranularity": "1_DAYS",
            "component.detector.type": "THRESHOLD",
            "component.detector.max": "${max}",
            "component.detector.min": "${min}",
            "component.detector.offset": "mo1m",
            "component.detector.pattern": "down",
            "anomaly.metric": "${metric}"
          },
          "inputs": [
            {
              "targetProperty": "current",
              "sourcePlanNode": "currentDataFetcher",
              "sourceProperty": "currentOutput"
            }
          ],
          "outputs": []
        },
        {
          "name": "currentDataFetcher",
          "type": "DataFetcher",
          "params": {
            "component.pinot.dataSource": "${dataSource}",
            "component.pinot.query": "SELECT DATETIMECONVERT(\"date\", '1:DAYS:SIMPLE_DATE_FORMAT:yyyyMMdd', '1:MILLISECONDS:EPOCH', '${monitoringGranularity}') as ts, ${metric} as met FROM ${dataset} WHERE ts >= ${startTime} AND ts < ${endTime} GROUP BY ts ORDER BY ts LIMIT 1000"
          },
          "inputs": [],
          "outputs": [
            {
              "outputKey": "pinot",
              "outputName": "currentOutput"
            }
          ]
        }
      ]
    },
    "templateProperties": {
      "dataSource": "pinotQuickStartLocal",
      "dataset": "pageviews",
      "metric": "sum(views)",
      "monitoringGranularity": "1:DAYS",
      "max": "850000",
      "min": "300000"
    },
    "lastTimestamp": 0
  }
]
