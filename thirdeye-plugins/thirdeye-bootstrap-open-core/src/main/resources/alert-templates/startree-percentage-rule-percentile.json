{
  "name": "startree-percentage-rule-percentile",
  "description": "Percentage rule template. Aggregation function with 2 operands: PERCENTILETDIGEST, DISTINCTCOUNTHLL,etc...",
  "nodes": [
    {
      "name": "root",
      "type": "PostProcessor",
      "params": {
        "type": "TIME_OF_WEEK",
        "component.ignore": "${timeOfWeekIgnore}",
        "component.daysOfWeek": "${daysOfWeek}",
        "component.hoursOfDay": "${hoursOfDay}",
        "component.dayHoursOfWeek": "${dayHoursOfWeek}"
      },
      "inputs": [
        {
          "sourcePlanNode": "coldStartProcessor"
        }
      ],
      "outputs": []
    },
    {
      "name": "coldStartProcessor",
      "type": "PostProcessor",
      "params": {
        "type": "COLD_START",
        "component.ignore": "${coldStartIgnore}",
        "component.tableName": "${dataset}",
        "component.coldStartPeriod": "${baselineOffset}"
      },
      "inputs": [
        {
          "sourcePlanNode": "anomalyDetector"
        }
      ],
      "outputs": []
    },
    {
      "name": "anomalyDetector",
      "type": "AnomalyDetector",
      "params": {
        "component.percentageChange": "${percentageChange}",
        "component.monitoringGranularity": "${monitoringGranularity}",
        "component.metric": "met",
        "component.timestamp": "ts",
        "anomaly.metric": "${aggregationColumn}",
        "anomaly.dataset": "${dataset}",
        "anomaly.source": "percentage-change-template/root",
        "type": "PERCENTAGE_CHANGE",
        "component.pattern": "${pattern}"
      },
      "inputs": [
        {
          "targetProperty": "baseline",
          "sourcePlanNode": "baselineMissingDataManager",
          "sourceProperty": "baselineOutput"
        },
        {
          "targetProperty": "current",
          "sourcePlanNode": "currentMissingDataManager",
          "sourceProperty": "currentOutput"
        }
      ],
      "outputs": []
    },
    {
      "name": "baselineMissingDataManager",
      "type": "TimeIndexFiller",
      "params": {
        "component.timestamp": "ts"
      },
      "inputs": [
        {
          "sourcePlanNode": "baselineDataFetcher",
          "sourceProperty": "baselineOutput"
        }
      ],
      "outputs": [
        {
          "outputName": "baselineOutput"
        }
      ]
    },
    {
      "name": "baselineDataFetcher",
      "type": "DataFetcher",
      "params": {
        "component.dataSource": "${dataSource}",
        "component.tableName": "${dataset}",
        "component.query": "SELECT __timeGroup(\"${timeColumn}\", '${timeColumnFormat}', '${monitoringGranularity}') as ts, ${aggregationFunction}(${aggregationColumn}, ${aggregationParameter}) as met FROM ${dataset} WHERE __timeFilter(\"${timeColumn}\", '${timeColumnFormat}', '${baselineOffset}', '${baselineOffset}') ${queryFilters} GROUP BY ts ORDER BY ts LIMIT ${queryLimit}"
      },
      "inputs": [],
      "outputs": [
        {
          "outputKey": "pinot",
          "outputName": "baselineOutput"
        }
      ]
    },
    {
      "name": "currentMissingDataManager",
      "type": "TimeIndexFiller",
      "params": {
        "component.timestamp": "ts"
      },
      "inputs": [
        {
          "sourcePlanNode": "currentDataFetcher",
          "sourceProperty": "currentOutput"
        }
      ],
      "outputs": [
        {
          "outputName": "currentOutput"
        }
      ]
    },
    {
      "name": "currentDataFetcher",
      "type": "DataFetcher",
      "params": {
        "component.dataSource": "${dataSource}",
        "component.tableName": "${dataset}",
        "component.query": "SELECT __timeGroup(\"${timeColumn}\", '${timeColumnFormat}', '${monitoringGranularity}') as ts, ${aggregationFunction}(${aggregationColumn}, ${aggregationParameter}) as met FROM ${dataset} WHERE __timeFilter(\"${timeColumn}\", '${timeColumnFormat}') ${queryFilters} GROUP BY ts ORDER BY ts LIMIT ${queryLimit}"
      },
      "inputs": [],
      "outputs": [
        {
          "outputKey": "pinot",
          "outputName": "currentOutput"
        }
      ]
    }
  ],
  "metadata": {
    "datasource": {
      "name": "${dataSource}"
    },
    "dataset": {
      "name": "${dataset}",
      "dimensions": "${rcaIncludedDimensions}",
      "rcaExcludedDimensions": "${rcaExcludedDimensions}",
      "completenessDelay": "${completenessDelay}"
    },
    "metric": {
      "name": "${aggregationColumn}",
      "aggregationFunction": "${rcaAggregationFunction}",
      "where": "${queryFilters}"
    },
    "timezone": "${timezone}",
    "mergeMaxGap": "${mergeMaxGap}",
    "mergeMaxDuration": "${mergeMaxDuration}",
    "granularity": "${monitoringGranularity}"
  },
  "defaultProperties": {
    "timezone": "UTC",
    "timeColumn": "AUTO",
    "timeColumnFormat": "",
    "pattern": "UP_OR_DOWN",
    "completenessDelay": "P0D",
    "mergeMaxGap": "",
    "mergeMaxDuration": "",
    "rcaAggregationFunction": "",
    "queryFilters": "",
    "rcaIncludedDimensions": [],
    "rcaExcludedDimensions": [],
    "coldStartIgnore": "true",
    "timeOfWeekIgnore": "true",
    "daysOfWeek": [],
    "hoursOfDay": [],
    "dayHoursOfWeek": {},
    "queryLimit": "100000000"
  }
}
