{
  "name": "startree-mean-variance",
  "description": "Mean-Variance template. Aggregation function with 1 operand: SUM, MAX,etc...",
  "nodes": [
    {
      "name": "root",
      "type": "AnomalyDetector",
      "params": {
        "component.metric": "met",
        "component.monitoringGranularity": "${monitoringGranularity}",
        "component.lookbackPeriod": "${lookback}",
        "component.timestamp": "ts",
        "anomaly.metric": "${aggregationColumn}",
        "anomaly.dataset": "${dataset}",
        "anomaly.source": "meanVariance-template/root",
        "type": "MEAN_VARIANCE",
        "component.pattern": "${pattern}",
        "component.sensitivity": "${sensitivity}",
        "component.seasonalityPeriod": "${seasonalityPeriod}"
      },
      "inputs": [
        {
          "targetProperty": "current",
          "sourcePlanNode": "missingDataPointsFiller",
          "sourceProperty": "preparedCurrentDataWithHistory"
        }
      ],
      "outputs": []
    },
    {
      "name": "missingDataPointsFiller",
      "type": "TimeIndexFiller",
      "inputs": [
        {
          "sourcePlanNode": "currentDataWithHistoryFetcher",
          "sourceProperty": "currentDataWithHistory"
        }
      ],
      "outputs": [
        {
          "outputName": "preparedCurrentDataWithHistory"
        }
      ]
    },
    {
      "name": "currentDataWithHistoryFetcher",
      "type": "DataFetcher",
      "params": {
        "component.dataSource": "${dataSource}",
        "component.query": "SELECT __timeGroup(\"${timeColumn}\", '${timeColumnFormat}', '${monitoringGranularity}', '${timezone}') as ts, ${aggregationFunction}(\"${aggregationColumn}\") as met FROM ${dataset} WHERE __timeFilter(ts, '${lookback}') ${queryFilters} GROUP BY ts ORDER BY ts LIMIT ${queryLimit}"
      },
      "inputs": [],
      "outputs": [
        {
          "outputKey": "currentDataWithHistory",
          "outputName": "currentDataWithHistory"
        }
      ]
    }
  ],
  "metadata": {
    "datasource": {
      "name": "${dataSource}"
    },
    "dataset": {
      "name": "${dataset}",
      "completenessDelay": "${completenessDelay}"
    },
    "metric": {
      "name": "${aggregationColumn}",
      "where": "${queryFilters}"
    },
    "timezone": "${timezone}",
    "granularity": "${monitoringGranularity}"
  },
  "defaultProperties": {
    "timezone": "UTC",
    "pattern": "UP_OR_DOWN",
    "completenessDelay": "P0D",
    "queryFilters": "",
    "queryLimit": "100000000",
    "seasonalityPeriod": "PT0S"
  }
}
