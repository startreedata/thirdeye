### absolute change
## index filler without config - uses metadata passed by macros
## same result than with the manual config
POST http://localhost:8080/api/alerts/evaluate
accept: application/json
Content-Type: application/json

{
  "start": "{{start}}",
  "end": "{{end}}",
  "alert": {"name": "sample-alert",
    "description": "Sample description payload for testing",
    "cron": "0 0/1 * 1/1 * ? *",
    "template": {
      "nodes": [
        {
          "name": "root",
          "type": "AnomalyDetector",
          "params": {
            "type": "ABSOLUTE_CHANGE",
            "component.timezone": "US/Pacific",
            "component.monitoringGranularity": "P1D",
            "component.timestamp": "ts",
            "component.metric": "met",
            "component.absoluteChange": "${absoluteChange}",
            "component.offset": "${offset}",
            "component.pattern": "${pattern}",
            "anomaly.metric": "${metric}"
          },
          "inputs": [
            {
              "targetProperty": "baseline",
              "sourcePlanNode": "baselineMissingDataManager",
              "sourceProperty": "baselineOutput"
            },
            {
              "targetProperty": "current",
              "sourcePlanNode": "currentMissingDataManager",
              "sourceProperty": "currentOutput"
            }
          ],
          "outputs": []
        },
        {
          "name": "currentMissingDataManager",
          "type": "TimeIndexFiller",
          "inputs": [
            {
              "sourcePlanNode": "currentDataFetcher",
              "sourceProperty": "currentOutput"
            }
          ],
          "outputs": [
            {
              "outputName": "currentOutput"
            }
          ]
        },
        {
          "name": "baselineMissingDataManager",
          "type": "TimeIndexFiller",
          "inputs": [
            {
              "sourcePlanNode": "baselineDataFetcher",
              "sourceProperty": "baselineOutput"
            }
          ],
          "outputs": [
            {
              "outputName": "baselineOutput"
            }
          ]
        },
        {
          "name": "baselineDataFetcher",
          "type": "DataFetcher",
          "params": {
            "component.dataSource": "${dataSource}",
            "component.query": "SELECT __timeGroup(\"${timeColumn}\", '${timeColumnFormat}', '${monitoringGranularity}') as ts, ${metric} as met FROM ${dataset} WHERE __timeFilter(ts, '${offsetJava}', '${offsetJava}') GROUP BY ts ORDER BY ts LIMIT 1000"
          },
          "inputs": [],
          "outputs": [
            {
              "outputKey": "pinot",
              "outputName": "baselineOutput"
            }
          ]
        },
        {
          "name": "currentDataFetcher",
          "type": "DataFetcher",
          "params": {
            "component.dataSource": "${dataSource}",
            "component.query": "SELECT __timeGroup(\"${timeColumn}\", '${timeColumnFormat}', '${monitoringGranularity}') as ts, ${metric} as met FROM ${dataset} WHERE __timeFilter(ts) GROUP BY ts ORDER BY ts LIMIT 1000"
          },
          "inputs": [],
          "outputs": [
            {
              "outputKey": "pinot",
              "outputName": "currentOutput"
            }
          ]
        }
      ]
    },
    "templateProperties": {
      "dataSource": "pinotQuickStartLocal",
      "dataset": "pageviews_with_missing_data",
      "metric": "sum(views)",
      "monitoringGranularity": "P1D",
      "timeColumn": "date",
      "timeColumnFormat": "yyyyMMdd",
      "absoluteChange": "100000",
      "offset": "wo1w",
      "offsetJava": "P7D",
      "pattern": "down"
    }
  }
}